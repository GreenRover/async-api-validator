kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ $.Values.product }}
  labels:
    app: {{ $.Values.product }}
spec:
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: {{ $.Values.product }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{ $.Values.product }}
      annotations:
        collectord.io/logs-output: splunk::prod
        collectord.io/logs-index: {{ $.Values.splunkIndex }}
    spec:
      containers:
        - name: {{ $.Values.product }}
          image: "docker.bin.sbb.ch/tms/api-validation:{{ ternary $.Values.continuousVersion $.Chart.Version (eq $.Values.useContinuousVersion true) }}"
          imagePullPolicy: {{ $.Values.imagePullPolicy }}
          env:
            - name: TZ
              value: UTC
            - name: VERSION
              value: {{ $.Chart.Version }}
          ports:
            - containerPort: 8060
              protocol: TCP
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
            limits:
              cpu: 500m
              memory: 250Mi
          livenessProbe:
            httpGet:
              path: /
              port: 8060
              scheme: HTTP
            initialDelaySeconds: 60
            timeoutSeconds: 7
            periodSeconds: 20
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /
              port: 8060
              scheme: HTTP
            initialDelaySeconds: 60
            timeoutSeconds: 7
            periodSeconds: 20
            failureThreshold: 3
            successThreshold: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
